name: Build and Deploy
run-name: Build and Deploy v${{ github.event.inputs.tag }}
on:
    # push:
    #     branches:
    #         - main
    workflow_dispatch:
      inputs:
        tag:
          description: "Release version/tag"
          type: string
          required: true
env:
    ACR_RESOURCE_GROUP: rg_kubernetes
    AZURE_CONTAINER_REGISTRY: acrpegersoft
    CLUSTER_NAME: k8spergersoft
    CLUSTER_RESOURCE_GROUP: rg_kubernetes
    CONTAINER_NAME: ps-keycloak-angular
    DEPLOYMENT_MANIFEST_PATH: |
        ./kubernetes/frontend-azure-ingress.yaml
        ./kubernetes/frontend-deployment-azure.yaml
        ./kubernetes/frontend-sevice.yaml

jobs:
    buildImage:
        permissions:
            contents: read
            id-token: write
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: azure/login@v2
              with:
                creds: ${{ secrets.AZURE_CREDENTIALS }}
            - name: Build and push image to ACR
              run: |
                az acr build \
                  --build-arg KEYCLOAK_URL=${{ secrets.KEYCLOAK_URL }} \ 
                  --build-arg KEYCLOAK_REALM=${{ secrets.KEYCLOAK_REALM }} \
                  --build-arg KEYCLOAK_CLIENT_ID=${{ secrets.KEYCLOAK_CLIENT_ID }} \ 
                  --build-arg AXING_API_URL=${{ secrets.AXING_API_URL }} \
                  --image ${{ env.CONTAINER_NAME }}:${{ inputs.tag }} \
                  --registry ${{ env.AZURE_CONTAINER_REGISTRY }} -g ${{ env.ACR_RESOURCE_GROUP }} -f ./Dockerfile ./
    deploy:
        permissions:
            actions: read
            contents: read
            id-token: write
        runs-on: ubuntu-latest
        needs:
            - buildImage
        steps:
            - uses: actions/checkout@v3
            - uses: azure/login@v2
              with:
                creds: ${{ secrets.AZURE_CREDENTIALS }}

            - uses: azure/use-kubelogin@v1
              name: Set up kubelogin for non-interactive login
              with:
                kubelogin-version: v0.0.25
            - uses: azure/aks-set-context@v3
              name: Get K8s context
              with:
                admin: "false"
                cluster-name: ${{ env.CLUSTER_NAME }}
                resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}
                use-kubelogin: "true"
            - uses: Azure/k8s-deploy@v4
              name: Deploys application
              with:
                action: deploy
                images: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ inputs.tag }}
                manifests: ${{ env.DEPLOYMENT_MANIFEST_PATH }}
                namespace: default
